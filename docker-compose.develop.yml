version: "3.9"
services:
  broker:
    build:
      context: .
      dockerfile: redis.Dockerfile
    container_name: cloud-conversion-tool-broker
    ports:
      - "6380:6379"
    volumes:
      - ./data/redis/:/data
  formatter-api:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: cloud-conversion-tool-formatter-api
    restart: always
    volumes:
      - ".:/app"
      - file_storage:/app/videos
    ports:
      - "8001:8000"
    env_file:
      - .env.dev
    tty: true
    depends_on:
      - broker
      - db
      - auth-db
      - pubsub
    links:
      - broker
      - db
      - auth-db
      - pubsub
  db:
    image: postgres
    env_file:
      - .env.db
    container_name: cloud-conversion-tool-db
    volumes:
      - "./data/postgres:/var/lib/postgresql"
    ports:
      - "5432:5432"
  auth-db:
    image: postgres
    env_file:
      - ../cloud-conversion-tool-api/.env.db
    container_name: auth-db
    volumes:
      - "./data/postgres:/var/lib/postgresql"
    expose:
      - "5440"
    ports:
      - "5440:5440"
  gateway:
    build:
      context: ../cloud-conversion-tool-api/.
      dockerfile: ../cloud-conversion-tool-api/dev.Dockerfile
    container_name: cloud-conversion-tool-api
    volumes:
      - "../cloud-conversion-tool-api/.:/app"
      - "./videos:/app/videos"
      - file_storage:/app/videos
    ports:
      - "5001:5000"
    env_file:
      - ../cloud-conversion-tool-api/.env.dev
    tty: true
    depends_on:
      - broker
      - auth-db
      - formatter-api
      - pubsub
    links:
      - broker
      - auth-db
      - formatter-api
      - pubsub
  postgres-ui:
    image: dpage/pgadmin4
    env_file:
      - .env.pg
    container_name: pgadmin-web
    volumes:
      - ./data/pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - db
    links:
      - db
    networks:
      - default
  pubsub:
    build:
      context: .
      dockerfile: gcloud.Dockerfile
    env_file:
      - .gcloud.env
    container_name: gcloud-pubsub-queue
    volumes:
      - ./key/service-account-key.json:/key/service-account-key.json
    ports:
      - "8085:8085"
    entrypoint: ["sh", "./docker/dev.topic.sh"]
    tty: true
volumes:
  file_storage: